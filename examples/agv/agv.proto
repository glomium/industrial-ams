syntax = "proto3";

package agv.proto;

import "google/protobuf/empty.proto";


service Source {
    /*
    loads coordinates of source
    */
    rpc get_coordinate(google.protobuf.Empty) returns (Data);

    /*
    returns the time when the next order in queue was created (first come first serve)
    */
    rpc next_order(google.protobuf.Empty) returns (Time);

    /*
    loads the next part to the carrier
    */
    rpc get_part(google.protobuf.Empty) returns (Data);
}


service Sink {
    /*
    loads coordinates of sink
    */
    rpc get_coordinate(google.protobuf.Empty) returns (Data);

    /*
    puts a part into the sink. if it is full it returns a time to wait
    */
    rpc put_part(google.protobuf.Empty) returns (Time);
}


service Vehicle {
    /*
    loads coordinates of vehicle, if vehicle is idle, otherwise returns a not available error (closes vehicle first)
    */
    rpc get_coordinate(google.protobuf.Empty) returns (Data);

    /*
    drive to requested position and pickup a workpiece
    */
    rpc drive(Data) returns (google.protobuf.Empty);
}


message Data {
    string name = 1;
    float x = 2;
    float y = 3;
}


message Time {
    float time = 1;
}
