name: Run static code analysis and tests

on: [push]

jobs:
  unittest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:

    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements/test.txt

    - name: Static code analysis
      run: make grpc static

    - name: Create s single node docker swarm cluster
      run: |
        docker swarm init
        make certs
        docker-compose -f docker-test.yaml up -d

    - name: Test with unittests
      run: coverage run --data-file=coverage-py${{ matrix.python-version }} -m unittest -v

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: coverage-py${{ matrix.python-version }}
        path: coverage-py${{ matrix.python-version }}

  docker:
    runs-on: ubuntu-latest
    needs: [unittest]
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/build.txt

    - name: Build wheel
      run: make wheel

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build container and push (latest)
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: glomium/industrial-ams:latest

    - name: Build container and push (rolling)
      if: github.ref == 'refs/heads/develop'
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: glomium/industrial-ams:rolling
