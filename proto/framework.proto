syntax = "proto3";

package ams.server;

import "google/protobuf/empty.proto";

/*
*/
service Framework {
    /*
    */
    rpc agents(google.protobuf.Empty) returns (stream AgentData) {}

    /*
    */
    rpc images(google.protobuf.Empty) returns (ImagesData) {}

    /*
    send this command to create a agent

    fails with invalid_arguemnt if argument missing or incorrect
    fails with already exists if name already exists
    fails with not found if image is not found or image is invalid
    */
    rpc create(AgentData) returns (AgentData) {}

    /*
    send this command to update a agent

    fails with invalid_arguemnt if argument missing or incorrect
    fails with already exists if name already exists
    fails with not found if agent or image is not found or image is invalid
    */
    rpc update(AgentData) returns (AgentData) {}

    /*
    agent sends this command to signalize its operational
    */
    rpc booted(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    /*
    agent sends this command to destroy himself (service is removed)
    */
    rpc destroy(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    /*
    agent sends this command to shut himself down (service is scaled to 0)
    */
    rpc sleep(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    /*
    agent sends this command to update himself (update is forced on service)
    */
    rpc upgrade(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    /*
    agent sends this command to start another agent (service is scaled to 1)
    */
    rpc wake(WakeAgent) returns (google.protobuf.Empty) {}
}

message WakeAgent {
    string agent = 1;
}

message AgentData {
    string name = 1;
    string address = 2;
    string image = 3;
    string version = 4;
    string config = 5;
    bool autostart = 6;
}

message ImagesData {
    repeated ImageData images = 1;
}

message ImageData {
    string id = 1;
    repeated string tag = 2;
}
